/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Subscription, SubscriptionInterface } from "../Subscription";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "enum Subscription.Plans",
        name: "plan",
        type: "uint8",
      },
    ],
    name: "buy",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum Subscription.Plans",
        name: "plan",
        type: "uint8",
      },
    ],
    name: "getDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum Subscription.Plans",
        name: "plan",
        type: "uint8",
      },
    ],
    name: "getPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061094c806100606000396000f3fe6080604052600436106100345760003560e01c806314107f3c1461003957806337f1e7f214610055578063bbd964f414610092575b600080fd5b610053600480360381019061004e9190610715565b6100cf565b005b34801561006157600080fd5b5061007c60048036038101906100779190610715565b610256565b60405161008991906107d3565b60405180910390f35b34801561009e57600080fd5b506100b960048036038101906100b49190610715565b6104b0565b6040516100c691906107d3565b60405180910390f35b6100d881610256565b3410156100e457600080fd5b42600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054111561018e57610134816104b0565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461018291906107ff565b925050819055506101ec565b600042905061019c826104b0565b816101a791906107ff565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015610252573d6000803e3d6000fd5b5050565b6000806003811115610291577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8260038111156102ca577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14156102d957600090506104ab565b60016003811115610313577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b82600381111561034c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b141561036157662386f26fc1000090506104ab565b6002600381111561039b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8260038111156103d4577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14156103e95766470de4df82000090506104ab565b600380811115610422577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b82600381111561045b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b141561047057666a94d74f43000090506104ab565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104a290610793565b60405180910390fd5b919050565b60008060038111156104eb577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b826003811115610524577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14156105355762278d0090506106fb565b6001600381111561056f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8260038111156105a8577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14156105b95762278d0090506106fb565b600260038111156105f3577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b82600381111561062c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b141561063d57624f1a0090506106fb565b600380811115610676577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8260038111156106af577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14156106c0576276a70090506106fb565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f2906107b3565b60405180910390fd5b919050565b60008135905061070f81610906565b92915050565b60006020828403121561072757600080fd5b600061073584828501610700565b91505092915050565b600061074b601f836107ee565b91506107568261088e565b602082019050919050565b600061076e6022836107ee565b9150610779826108b7565b604082019050919050565b61078d81610855565b82525050565b600060208201905081810360008301526107ac8161073e565b9050919050565b600060208201905081810360008301526107cc81610761565b9050919050565b60006020820190506107e86000830184610784565b92915050565b600082825260208201905092915050565b600061080a82610855565b915061081583610855565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561084a5761084961085f565b5b828201905092915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f43616e6e6f742067657420707269636520666f722077726f6e6720706c616e00600082015250565b7f43616e6e6f7420676574206475726174696f6e20666f722077726f6e6720706c60008201527f616e000000000000000000000000000000000000000000000000000000000000602082015250565b6004811061091357600080fd5b5056fea2646970667358221220bf01c2622753d9543e05acb4e89c76e4dabbfc81cbf79d9610c979be2e9fb38664736f6c63430008040033";

export class Subscription__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Subscription> {
    return super.deploy(overrides || {}) as Promise<Subscription>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Subscription {
    return super.attach(address) as Subscription;
  }
  connect(signer: Signer): Subscription__factory {
    return super.connect(signer) as Subscription__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SubscriptionInterface {
    return new utils.Interface(_abi) as SubscriptionInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Subscription {
    return new Contract(address, _abi, signerOrProvider) as Subscription;
  }
}
