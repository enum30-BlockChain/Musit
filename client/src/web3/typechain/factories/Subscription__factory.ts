/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Subscription, SubscriptionInterface } from "../Subscription";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "enum Subscription.Plans",
        name: "_plan",
        type: "uint8",
      },
    ],
    name: "buy",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum Subscription.Plans",
        name: "_plan",
        type: "uint8",
      },
    ],
    name: "getDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getEndAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getIsFreeCouponUsed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum Subscription.Plans",
        name: "_plan",
        type: "uint8",
      },
    ],
    name: "getPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_endAt",
        type: "uint256",
      },
    ],
    name: "setEndAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_change",
        type: "bool",
      },
    ],
    name: "setIsFreeCouponUsed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611124806100606000396000f3fe6080604052600436106100705760003560e01c8063bbd964f41161004e578063bbd964f41461010b578063c1c288f814610148578063c71bdbb214610185578063ff874b0a146101c257610070565b8063137cb58e1461007557806314107f3c146100b257806337f1e7f2146100ce575b600080fd5b34801561008157600080fd5b5061009c60048036038101906100979190610cc7565b6101ff565b6040516100a99190610ed6565b60405180910390f35b6100cc60048036038101906100c79190610d68565b610248565b005b3480156100da57600080fd5b506100f560048036038101906100f09190610d68565b6105a8565b6040516101029190610ed6565b60405180910390f35b34801561011757600080fd5b50610132600480360381019061012d9190610d68565b610802565b60405161013f9190610ed6565b60405180910390f35b34801561015457600080fd5b5061016f600480360381019061016a9190610cf0565b610a52565b60405161017c9190610e3b565b60405180910390f35b34801561019157600080fd5b506101ac60048036038101906101a79190610d2c565b610b41565b6040516101b99190610ed6565b60405180910390f35b3480156101ce57600080fd5b506101e960048036038101906101e49190610cc7565b610c1d565b6040516101f69190610e3b565b60405180910390f35b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610251816105a8565b34101561025d57600080fd5b60006003811115610297577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8160038111156102d0577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b141561036457600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610363576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035a90610eb6565b60405180910390fd5b5b42600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054111561040e576103b481610802565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546104029190610f02565b9250508190555061046c565b600042905061041c82610802565b816104279190610f02565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f193505050501580156104d2573d6000803e3d6000fd5b506000600381111561050d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b816003811115610546577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14156105a5576001600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b50565b60008060038111156105e3577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b82600381111561061c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b141561062b57600090506107fd565b60016003811115610665577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b82600381111561069e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14156106b357662386f26fc1000090506107fd565b600260038111156106ed577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b826003811115610726577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b141561073b5766470de4df82000090506107fd565b600380811115610774577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8260038111156107ad577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14156107c257666a94d74f43000090506107fd565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107f490610e76565b60405180910390fd5b919050565b600080600381111561083d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b826003811115610876577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14156108875762278d009050610a4d565b600160038111156108c1577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8260038111156108fa577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b141561090b5762278d009050610a4d565b60026003811115610945577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b82600381111561097e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b141561098f576276a7009050610a4d565b6003808111156109c8577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b826003811115610a01577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1415610a125762ed4e009050610a4d565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a4490610e96565b60405180910390fd5b919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ae3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ada90610e56565b60405180910390fd5b81600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055905092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610bd2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bc990610e56565b60405180910390fd5b81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055905092915050565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b600081359050610c8281611099565b92915050565b600081359050610c97816110b0565b92915050565b600081359050610cac816110c7565b92915050565b600081359050610cc1816110d7565b92915050565b600060208284031215610cd957600080fd5b6000610ce784828501610c73565b91505092915050565b60008060408385031215610d0357600080fd5b6000610d1185828601610c73565b9250506020610d2285828601610c88565b9150509250929050565b60008060408385031215610d3f57600080fd5b6000610d4d85828601610c73565b9250506020610d5e85828601610cb2565b9150509250929050565b600060208284031215610d7a57600080fd5b6000610d8884828501610c9d565b91505092915050565b610d9a81610f6a565b82525050565b6000610dad601883610ef1565b9150610db882610fcf565b602082019050919050565b6000610dd0601f83610ef1565b9150610ddb82610ff8565b602082019050919050565b6000610df3602283610ef1565b9150610dfe82611021565b604082019050919050565b6000610e16601b83610ef1565b9150610e2182611070565b602082019050919050565b610e3581610f96565b82525050565b6000602082019050610e506000830184610d91565b92915050565b60006020820190508181036000830152610e6f81610da0565b9050919050565b60006020820190508181036000830152610e8f81610dc3565b9050919050565b60006020820190508181036000830152610eaf81610de6565b9050919050565b60006020820190508181036000830152610ecf81610e09565b9050919050565b6000602082019050610eeb6000830184610e2c565b92915050565b600082825260208201905092915050565b6000610f0d82610f96565b9150610f1883610f96565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610f4d57610f4c610fa0565b5b828201905092915050565b6000610f6382610f76565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4f6e6c79206f776e65722063616e206163636573732069740000000000000000600082015250565b7f43616e6e6f742067657420707269636520666f722077726f6e6720706c616e00600082015250565b7f43616e6e6f7420676574206475726174696f6e20666f722077726f6e6720706c60008201527f616e000000000000000000000000000000000000000000000000000000000000602082015250565b7f4672656520636f75706f6e20697320616c726561647920757365640000000000600082015250565b6110a281610f58565b81146110ad57600080fd5b50565b6110b981610f6a565b81146110c457600080fd5b50565b600481106110d457600080fd5b50565b6110e081610f96565b81146110eb57600080fd5b5056fea2646970667358221220e643eba2c480fd59e8ff0b9abe772c847a07c6bb38202430a64ded821ed7b46f64736f6c63430008040033";

export class Subscription__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Subscription> {
    return super.deploy(overrides || {}) as Promise<Subscription>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Subscription {
    return super.attach(address) as Subscription;
  }
  connect(signer: Signer): Subscription__factory {
    return super.connect(signer) as Subscription__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SubscriptionInterface {
    return new utils.Interface(_abi) as SubscriptionInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Subscription {
    return new Contract(address, _abi, signerOrProvider) as Subscription;
  }
}
